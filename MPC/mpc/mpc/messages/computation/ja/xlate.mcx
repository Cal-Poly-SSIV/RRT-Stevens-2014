<()In the "%s" command, "state" must be a valid MPCSTATE object. Type "help mpcstate" for more information.
>()*JA*In the "%s" command, "state" must be a valid MPCSTATE object. Type "help mpcstate" for more information.

<()In the "%s" command, current measured plant outputs "y" must be real finite values.
>()*JA*In the "%s" command, current measured plant outputs "y" must be real finite values.

<()In the "%s" command, current measured plant outputs "y" must have %d entries.
>()*JA*In the "%s" command, current measured plant outputs "y" must have %d entries.

<()In the "%s" command, current setpoints "r" must be real finite values.
>()*JA*In the "%s" command, current setpoints "r" must be real finite values.

<()In the "%s" command, current setpoints "r" must have %d entries or columns.
>()*JA*In the "%s" command, current setpoints "r" must have %d entries or columns.

<()In the "%s" command, current measured disturbances "v" must be real finite values.
>()*JA*In the "%s" command, current measured disturbances "v" must be real finite values.

<()In the "%s" command, current measured disturbances "v" must have %d entries or columns.
>()*JA*In the "%s" command, current measured disturbances "v" must have %d entries or columns.

<()In the "%s" command, manipulated variable targets "utarget" must be a vector of %d entries.
>()*JA*In the "%s" command, manipulated variable targets "utarget" must be a vector of %d entries.

<()In the "%s" command, time vector "t" must be real values of length at least 2.
>()*JA*In the "%s" command, time vector "t" must be real values of length at least 2.

<()In the "%s" command, output responses data "y" must have size [Nt, Ny], Nt = length of time vector, Ny = number of outputs.
>()*JA*In the "%s" command, output responses data "y" must have size [Nt, Ny], Nt = length of time vector, Ny = number of outputs.

<()In the "%s" command, output responses data "y" has size [%i, %i], but [%i %i] is expected.
>()*JA*In the "%s" command, output responses data "y" has size [%i, %i], but [%i %i] is expected.

<()In the "%s" command, setpoints data "r" must have size [Nt, Ny], Nt = length of time vector, Ny = number of outputs.
>()*JA*In the "%s" command, setpoints data "r" must have size [Nt, Ny], Nt = length of time vector, Ny = number of outputs.

<()In the "%s" command, setpoints data "r" has size [%i, %i], but [%i %i] is expected.
>()*JA*In the "%s" command, setpoints data "r" has size [%i, %i], but [%i %i] is expected.

<()In the "%s" command, manipulated variable inputs data "u" must have size of [Nt, Nu], Nt = length of time vector, Ny = number of inputs.
>()*JA*In the "%s" command, manipulated variable inputs data "u" must have size of [Nt, Nu], Nt = length of time vector, Ny = number of inputs.

<()In the "%s" command, manipulated variable inputs data "u" has size [%i, %i], but [%i %i] is expected.
>()*JA*In the "%s" command, manipulated variable inputs data "u" has size [%i, %i], but [%i %i] is expected.

<()In the "%s" command, measured disturbance data "v" has size [%i, %i], but [%i %i] is expected.
>()*JA*In the "%s" command, measured disturbance data "v" has size [%i, %i], but [%i %i] is expected.

<()In the "%s" command, unmeasured disturbance data "d" has size [%i, %i], but [%i %i] is expected.
>()*JA*In the "%s" command, unmeasured disturbance data "d" has size [%i, %i], but [%i %i] is expected.

<()In the "%s" command, the total number of simulation steps provided by the second input argument must be a positive finite real scalar.
>()*JA*In the "%s" command, the total number of simulation steps provided by the second input argument must be a positive finite real scalar.

<()State components must be finite real values.
>()*JA*State components must be finite real values.

<()"%s" must be a vector of %d entries.
>()*JA*"%s" must be a vector of %d entries.

<()Reference preview flag must be a string of either "on" or "off".
>()*JA*Reference preview flag must be a string of either "on" or "off".

<()Measured Disturbance preview flag must be a string of either "on" or "off".
>()*JA*Measured Disturbance preview flag must be a string of either "on" or "off".

<()Measurement noise signal must be a real valued array with %d column(s).
>()*JA*Measurement noise signal must be a real valued array with %d column(s).

<()Input noise signal must be a real valued array with %d column(s).
>()*JA*Input noise signal must be a real valued array with %d column(s).

<()Manipulated variable signal must be a real valued array with %d column(s).
>()*JA*Manipulated variable signal must be a real valued array with %d column(s).

<()Unmeasured disturbance signal must be a real valued array with %d column(s).
>()*JA*Unmeasured disturbance signal must be a real valued array with %d column(s).

<()The "Model" property of "mpcsimopt" object must be an LTI object or a structure with fields "Plant" and "Nominal".
>()*JA*The "Model" property of "mpcsimopt" object must be an LTI object or a structure with fields "Plant" and "Nominal".

<()The "Model.Plant" property of "mpcsimopt" object must have %d manipulated variables as "MPCobj.Model.Plant" does.
>()*JA*The "Model.Plant" property of "mpcsimopt" object must have %d manipulated variables as "MPCobj.Model.Plant" does.

<()The "Model.Plant" property of "mpcsimopt" object must have %d total outputs as MPCobj.Model.Plant does.
>()*JA*The "Model.Plant" property of "mpcsimopt" object must have %d total outputs as MPCobj.Model.Plant does.

<()The "Model.Plant" property of "mpcsimopt" object must have %d measured outputs as MPCobj.Model.Plant does.
>()*JA*The "Model.Plant" property of "mpcsimopt" object must have %d measured outputs as MPCobj.Model.Plant does.

<()The "Model.Plant" property of "mpcsimopt" object must have %d measured disturbances as MPCobj.Model.Plant does.
>()*JA*The "Model.Plant" property of "mpcsimopt" object must have %d measured disturbances as MPCobj.Model.Plant does.

<()In the "Model.Plant" property of "mpcsimopt" object, measured output indices are different from what MPCobj.Model.Plant has.
>()*JA*In the "Model.Plant" property of "mpcsimopt" object, measured output indices are different from what MPCobj.Model.Plant has.

<()In the "Model.Plant" property of "mpcsimopt" object, manipulated variable indices are different from what MPCobj.Model.Plant has.
>()*JA*In the "Model.Plant" property of "mpcsimopt" object, manipulated variable indices are different from what MPCobj.Model.Plant has.

<()In the "Model.Plant" property of "mpcsimopt" object, measured disturbance indices are different from what MPCobj.Model.Plant has.
>()*JA*In the "Model.Plant" property of "mpcsimopt" object, measured disturbance indices are different from what MPCobj.Model.Plant has.

<()The "PlantInitialState" property of "mpcsimopt" object must have %d real entries.
>()*JA*The "PlantInitialState" property of "mpcsimopt" object must have %d real entries.

<()In the "%s" command, the maximum number of iterations "maxiter" must be at least 1.
>()*JA*In the "%s" command, the maximum number of iterations "maxiter" must be at least 1.

<()In the "%s" command, either Hessian matrix "H" or linear cost "f" has wrong dimensions.
>()*JA*In the "%s" command, either Hessian matrix "H" or linear cost "f" has wrong dimensions.

<()In the "%s" command, either constraint matrix "A" or linear cost "f" has wrong dimensions.
>()*JA*In the "%s" command, either constraint matrix "A" or linear cost "f" has wrong dimensions.

<()In the "%s" command, either constraint matrix "A" or right hand side "b" have wrong dimensions.
>()*JA*In the "%s" command, either constraint matrix "A" or right hand side "b" have wrong dimensions.

<()MPC problem is constrained and "ManipulatedVariables.RateMin" is not completely specified or has infinite values.
>()*JA*MPC problem is constrained and "ManipulatedVariables.RateMin" is not completely specified or has infinite values.

<()Setting values to %0.5g to prevent numerical problems in QP.
>()*JA*Setting values to %0.5g to prevent numerical problems in QP.

<()One or more entries in "ManipulatedVariables.RateMin" were < %0.5g. Modified to %0.5g to prevent numerical problems in QP.
>()*JA*One or more entries in "ManipulatedVariables.RateMin" were < %0.5g. Modified to %0.5g to prevent numerical problems in QP.

<()(Type "mpc_defaults" and look for "bigdeltaumin" variable for more information).
>()*JA*(Type "mpc_defaults" and look for "bigdeltaumin" variable for more information).

<()Simulation is in open-loop and setpoint signals will be ignored.
>()*JA*Simulation is in open-loop and setpoint signals will be ignored.

<()The "Optimizer.MaxIter" property of "mpc" object is rounded to the nearest integer %d.
>()*JA*The "Optimizer.MaxIter" property of "mpc" object is rounded to the nearest integer %d.

<()The "Optimizer.MinOutputECR" property of "mpc" object is smaller than the default value %7.5f.
>()*JA*The "Optimizer.MinOutputECR" property of "mpc" object is smaller than the default value %7.5f.

<()The "PredictionHorizon" property of "mpc" object is rounded to the nearest integer %d.
>()*JA*The "PredictionHorizon" property of "mpc" object is rounded to the nearest integer %d.

<()The "PredictionHorizon" property of "mpc" object is empty. Trying PredictionHorizon = %d.
>()*JA*The "PredictionHorizon" property of "mpc" object is empty. Trying PredictionHorizon = %d.

<()The "PredictionHorizon" property of "mpc" object %d is smaller than the maximum delay %d in the model. Choose a larger prediction horizon, for instance %d.
>()*JA*The "PredictionHorizon" property of "mpc" object %d is smaller than the maximum delay %d in the model. Choose a larger prediction horizon, for instance %d.

<()The "PredictionHorizon" property of "mpc" object is further increased to %d because model contains delays.
>()*JA*The "PredictionHorizon" property of "mpc" object is further increased to %d because model contains delays.

<()Maximum number of iterations exceeded, solution is unreliable. You may consider adjusting the "Optimizer.MaxIter" property of "mpc" object.
>()*JA*Maximum number of iterations exceeded, solution is unreliable. You may consider adjusting the "Optimizer.MaxIter" property of "mpc" object.

<()The constraints are overly stringent. No feasible solution. Previous optimal sequence will be used.
>()*JA*The constraints are overly stringent. No feasible solution. Previous optimal sequence will be used.

<()The "%s" property in the specification is too small. Increased to "Optimizer.MinOutputECR" = %2.1e.
>()*JA*The "%s" property in the specification is too small. Increased to "Optimizer.MinOutputECR" = %2.1e.

<()The "%s" property in the specification has more entries than the prediction horizon %d. Truncated at %d.
>()*JA*The "%s" property in the specification has more entries than the prediction horizon %d. Truncated at %d.

<()Simulation is in closed-loop (the "OpenLoop" property of "mpcsimopt" object is "off") and the "MVSignal" property of "mpcsimopt" object is ignored.
>()*JA*Simulation is in closed-loop (the "OpenLoop" property of "mpcsimopt" object is "off") and the "MVSignal" property of "mpcsimopt" object is ignored.

<()The "Model.Disturbance" property of "mpcsimopt" object is ignored. Define unmeasured disturbance signals in the "UnmeasuredDisturbance" of "mpcsimopt" object.
>()*JA*The "Model.Disturbance" property of "mpcsimopt" object is ignored. Define unmeasured disturbance signals in the "UnmeasuredDisturbance" of "mpcsimopt" object.

<()The "Model.Noise" property of "mpcsimopt" object is ignored. Define measurement noise in the "OutputNoise" of "mpcsimopt" object.
>()*JA*The "Model.Noise" property of "mpcsimopt" object is ignored. Define measurement noise in the "OutputNoise" of "mpcsimopt" object.

<()MPC model has nonzero nominal state values that are not compatible with the simulation plant. Setting "Model.Nominal.X" = "Model.Nominal.DX" = [] in the "mpcsimopt" object.
>()*JA*MPC model has nonzero nominal state values that are not compatible with the simulation plant. Setting "Model.Nominal.X" = "Model.Nominal.DX" = [] in the "mpcsimopt" object.

<()In the QP problem the lower bound of optimization variables "xmin" is not assigned. Assuming -1000 on each variable.
>()*JA*In the QP problem the lower bound of optimization variables "xmin" is not assigned. Assuming -1000 on each variable.

<()Hessian matrix of the QP problem is not symmetric.  Resetting H=(H+H')/2.
>()*JA*Hessian matrix of the QP problem is not symmetric.  Resetting H=(H+H')/2.

<()Hessian matrix of the QP problem is close to singular. Augmenting diagonal terms.
>()*JA*Hessian matrix of the QP problem is close to singular. Augmenting diagonal terms.

<()Lower bounds on blocked input increments are positive. Replaced by zeros.
>()*JA*Lower bounds on blocked input increments are positive. Replaced by zeros.

<()Upper bounds on blocked input increments are negative. Replaced by zeros.
>()*JA*Upper bounds on blocked input increments are negative. Replaced by zeros.

<()Initial state may be incorrect.
>()*JA*Initial state may be incorrect.

<()State offset may be incorrect.
>()*JA*State offset may be incorrect.

<()State derivative offset may be incorrect.
>()*JA*State derivative offset may be incorrect.

<()Initial state may be incorrect because initial input is nonzero.
>()*JA*Initial state may be incorrect because initial input is nonzero.

<()Invalid syntax. Use MPC = gpc2mpc(G) or MPC = gpc2mpc(G, Options).
>()*JA*Invalid syntax. Use MPC = gpc2mpc(G) or MPC = gpc2mpc(G, Options).

<()Invalid option. T polynomial must be a non-empty vector.
>()*JA*Invalid option. T polynomial must be a non-empty vector.

<()Invalid option. First coefficient of T polynomial must be non-zero.
>()*JA*Invalid option. First coefficient of T polynomial must be non-zero.

<()Invalid option. Horizons N1, N2, and NU must be >= 1.
>()*JA*Invalid option. Horizons N1, N2, and NU must be >= 1.

<()Invalid option. Lam (control increment penalty weight) must be non-negative.
>()*JA*Invalid option. Lam (control increment penalty weight) must be non-negative.

<()G must be a TF, SS, or ZPK object.
>()*JA*G must be a TF, SS, or ZPK object.

<()G must model the response for a single output.
>()*JA*G must model the response for a single output.

<()Invalid option. MVindex must be a scalar.
>()*JA*Invalid option. MVindex must be a scalar.

<()Invalid option. MVindex is not compatible with the input dimension of G.
>()*JA*Invalid option. MVindex is not compatible with the input dimension of G.

<()G sampling period must be a positive constant.
>()*JA*G sampling period must be a positive constant.

<()G has direct feedthrough from the MV to the output.
>()*JA*G has direct feedthrough from the MV to the output.

<()Options must be a MATLAB structure variable.
>()*JA*Options must be a MATLAB structure variable.

<()Options must contain field "%s".
>()*JA*Options must contain field "%s".

<()Options contains invalid field "%s".
>()*JA*Options contains invalid field "%s".

% 81 messages need translation.
