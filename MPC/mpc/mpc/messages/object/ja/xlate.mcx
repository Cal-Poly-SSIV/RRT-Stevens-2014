<()In the "%s" command, sample time "ts" must be a finite real scalar.
>()*JA*In the "%s" command, sample time "ts" must be a finite real scalar.

<()The second input argument of the "%s" command must be a string of either "input" or "output" as signal type.
>()*JA*The second input argument of the "%s" command must be a string of either "input" or "output" as signal type.

<()The third input argument of the "%s" command must be a scalar integer as signal index.
>()*JA*The third input argument of the "%s" command must be a scalar integer as signal index.

<()The forth input argument of the "%s" command must be a string as signal name.
>()*JA*The forth input argument of the "%s" command must be a string as signal name.

<()The "%s" command requires the index of the "%s" signal to be between 1 and %d. 
>()*JA*The "%s" command requires the index of the "%s" signal to be between 1 and %d. 

<()Cannot concatenate "mpc" objects.
>()*JA*Cannot concatenate "mpc" objects.

<()Use SET command to modify the properties of "mpc" object.
>()*JA*Use SET command to modify the properties of "mpc" object.

<()The first input argument of the "mpc" command must be one of the following: an LTI object, an IDMODEL object or a structure of models and offsets.
>()*JA*The first input argument of the "mpc" command must be one of the following: an LTI object, an IDMODEL object or a structure of models and offsets.

<()The second input argument of the "%s" command must be a valid "mpcdata.mpcstate" object.
>()*JA*The second input argument of the "%s" command must be a valid "mpcdata.mpcstate" object.

<()Only "set(MPCOBJ)" or "set(MPCOBJ,'PropertyName')" command allows an output argument.
>()*JA*Only "set(MPCOBJ)" or "set(MPCOBJ,'PropertyName')" command allows an output argument.

<()The second input argument of the "set" command must be a single-line string as property name.
>()*JA*The second input argument of the "set" command must be a single-line string as property name.

<()Property name "%s" not found when using the "set" command.
>()*JA*Property name "%s" not found when using the "set" command.

<()Ambiguous property name "%s" found when using the "set" command. Supply more characters.
>()*JA*Ambiguous property name "%s" found when using the "set" command. Supply more characters.

<()The "set" command cannot set properties of an empty mpc object. Use "mpc" command instead.
>()*JA*The "set" command cannot set properties of an empty mpc object. Use "mpc" command instead.

<()Property name and value must be in pairs when using the "set" command.
>()*JA*Property name and value must be in pairs when using the "set" command.

<()The "Model" property of "mpc" object must be one of the following: an LTI object, an IDMODEL object or a structure of models and offsets.
>()*JA*The "Model" property of "mpc" object must be one of the following: an LTI object, an IDMODEL object or a structure of models and offsets.

<()The "Notes" property of "mpc" object must be a cell array of strings.
>()*JA*The "Notes" property of "mpc" object must be a cell array of strings.

<()In the "size" command, "type" must be one of the following strings: "mv", "mo", "uo", "md" or "ud".
>()*JA*In the "size" command, "type" must be one of the following strings: "mv", "mo", "uo", "md" or "ud".

<()Unknown reference type: "%s". The object requires "dot" type of referencing.
>()*JA*Unknown reference type: "%s". The object requires "dot" type of referencing.

<()MPC controller with %d measured output(s), %d unmeasured output(s),
>()*JA*MPC controller with %d measured output(s), %d unmeasured output(s),

<()%d manipulated input(s), %d measured disturbance(s), %d unmeasured disturbance(s)
>()*JA*%d manipulated input(s), %d measured disturbance(s), %d unmeasured disturbance(s)

<()When calling the "mpchelp" command with one input argument, it must be either a string of command name or an "mpc" object.
>()*JA*When calling the "mpchelp" command with one input argument, it must be either a string of command name or an "mpc" object.

<()When calling the "mpchelp" command with two input arguments, the first one must be an "mpc" object.
>()*JA*When calling the "mpchelp" command with two input arguments, the first one must be an "mpc" object.

<()When calling the "mpchelp" command with two input arguments, the second one must be a string.
>()*JA*When calling the "mpchelp" command with two input arguments, the second one must be a string.

<()The "%s" command expects input argument No.%i to be an "mpc" object, but it is "%s".
>()*JA*The "%s" command expects input argument No.%i to be an "mpc" object, but it is "%s".

<()Java Swing not enabled.  It must be enabled to use the "%s" command.
>()*JA*Java Swing not enabled.  It must be enabled to use the "%s" command.

<()The input argument of the "%s" command must be a string of either "on" or "off". 
>()*JA*The input argument of the "%s" command must be a string of either "on" or "off". 

<()The first input argument of the "%s" command must be a non-empty "lti" object.
>()*JA*The first input argument of the "%s" command must be a non-empty "lti" object.

<()In the "setmpcsignals" command, signal type and channels must be in pairs, e.g. "setmpcsignals(MPCobj,SignalType1,Channels1,SignalType2,Channels2, ...)".
>()*JA*In the "setmpcsignals" command, signal type and channels must be in pairs, e.g. "setmpcsignals(MPCobj,SignalType1,Channels1,SignalType2,Channels2, ...)".

<()In the "%s" command, signal type must be a single-line string.
>()*JA*In the "%s" command, signal type must be a single-line string.

<()Unknown or ambiguous signal type found in the "%s" command.  It must be one of the following strings: "MV", "MD", "UD", "MO" or "UO".
>()*JA*Unknown or ambiguous signal type found in the "%s" command.  It must be one of the following strings: "MV", "MD", "UD", "MO" or "UO".

<()In the "%s" command, channel indices must be positive integers.
>()*JA*In the "%s" command, channel indices must be positive integers.

<()Extra input arguments to the "mpc" command ignored.
>()*JA*Extra input arguments to the "mpc" command ignored.

<()"ControlHorizon" > "PredictionHorizon". Truncated.
>()*JA*"ControlHorizon" > "PredictionHorizon". Truncated.

<()"sum(ControlHorizon)" > "PredictionHorizon". Control moves will be truncated.
>()*JA*"sum(ControlHorizon)" > "PredictionHorizon". Control moves will be truncated.

<()No sample time provided for plant model. Assuming sample time = controller's sample time = %g.
>()*JA*No sample time provided for plant model. Assuming sample time = controller's sample time = %g.

<()No sample time provided for noise model. Assuming sample time = plant model's sample time = %g.
>()*JA*No sample time provided for noise model. Assuming sample time = plant model's sample time = %g.

<()No sample time provided for disturbance model. Assuming sample time = plant model's sample time = %g.
>()*JA*No sample time provided for disturbance model. Assuming sample time = plant model's sample time = %g.

<()A feedthrough channel in NoiseModel was inserted to prevent problems with estimator design.
>()*JA*A feedthrough channel in NoiseModel was inserted to prevent problems with estimator design.

<()Resampling the "Model.Disturbance" property of "mpc" object to controller's sample time %0.4g.
>()*JA*Resampling the "Model.Disturbance" property of "mpc" object to controller's sample time %0.4g.

<()Integrated white noise added on unmeasured output channel #%d
>()*JA*Integrated white noise added on unmeasured output channel #%d

<()Too many rows in "%s". Extra rows deleted.
>()*JA*Too many rows in "%s". Extra rows deleted.

<()All input signals are labeled as "Measured" or "Noise". The model was probably converted from the Identification Toolbox.
>()*JA*All input signals are labeled as "Measured" or "Noise". The model was probably converted from the Identification Toolbox.

<()All "Measured" inputs will be treated as manipulated variables, all "Noise" inputs as unmeasured disturbances.
>()*JA*All "Measured" inputs will be treated as manipulated variables, all "Noise" inputs as unmeasured disturbances.

<()Type "help setmpcsignals" for more information.
>()*JA*Type "help setmpcsignals" for more information.

<()Initial conditions reset to zeros.
>()*JA*Initial conditions reset to zeros.

<()State offsets reset to zeros.
>()*JA*State offsets reset to zeros.

<()The "ControlHorizon" property of the "mpc" object is empty. Assuming %d.
>()*JA*The "ControlHorizon" property of the "mpc" object is empty. Assuming %d.

<()The "Model.Noise" property of the "mpc" object is empty. Assuming white noise on each measured output channel.
>()*JA*The "Model.Noise" property of the "mpc" object is empty. Assuming white noise on each measured output channel.

<()Converting "idmodel" object to state-space.
>()*JA*Converting "idmodel" object to state-space.

<()Resampling the "Model.Noise" property of "mpc" object to controller's sample time %0.4g.
>()*JA*Resampling the "Model.Noise" property of "mpc" object to controller's sample time %0.4g.

<()Resampling the %s disturbance model to controller's sample time %0.4g.
>()*JA*Resampling the %s disturbance model to controller's sample time %0.4g.

<()%s disturbance model: converting delays to states.
>()*JA*%s disturbance model: converting delays to states.

<()The "Model.Disturbance" property of "mpc" object is empty:
>()*JA*The "Model.Disturbance" property of "mpc" object is empty:

<()Assuming unmeasured input disturbance #%d is integrated white noise.
>()*JA*Assuming unmeasured input disturbance #%d is integrated white noise.

<()Assuming unmeasured input disturbance #%d is white noise.
>()*JA*Assuming unmeasured input disturbance #%d is white noise.

<()Integrated white noise added on measured output channel #%d.
>()*JA*Integrated white noise added on measured output channel #%d.

<()The "Weights.ManipulatedVariables" property of "mpc" object is empty. Assuming default %7.5f.
>()*JA*The "Weights.ManipulatedVariables" property of "mpc" object is empty. Assuming default %7.5f.

<()The "Weights.ManipulatedVariablesRate" property of "mpc" object is empty. Assuming default %7.5f.
>()*JA*The "Weights.ManipulatedVariablesRate" property of "mpc" object is empty. Assuming default %7.5f.

<()The "Weights.OutputVariables" property of "mpc" object is empty. Assuming default %7.5f.
>()*JA*The "Weights.OutputVariables" property of "mpc" object is empty. Assuming default %7.5f.

<()Specifications for the "%s" property of "mpc" object not found. Assuming default values.
>()*JA*Specifications for the "%s" property of "mpc" object not found. Assuming default values.

<()The number of elements in the "%s" property of "mpc" object is smaller than %d. Assuming default values.
>()*JA*The number of elements in the "%s" property of "mpc" object is smaller than %d. Assuming default values.

<()No input disturbance model specified. Assuming default integrators.
>()*JA*No input disturbance model specified. Assuming default integrators.

<()No output disturbance model specified. Assuming default output integrators.
>()*JA*No output disturbance model specified. Assuming default output integrators.

<()Assuming unspecified input signals are manipulated variables.
>()*JA*Assuming unspecified input signals are manipulated variables.

<()Assuming unspecified output signals are measured outputs.
>()*JA*Assuming unspecified output signals are measured outputs.

<()Converting the "Model.Plant" property of "mpc" object to state-space.
>()*JA*Converting the "Model.Plant" property of "mpc" object to state-space.

<()Resampling the "Model.Plant" property of "mpc" object to controller's sample time.
>()*JA*Resampling the "Model.Plant" property of "mpc" object to controller's sample time.

<()Converting model to discrete time.
>()*JA*Converting model to discrete time.

<()Converting delays to states.
>()*JA*Converting delays to states.

% 70 messages need translation.
